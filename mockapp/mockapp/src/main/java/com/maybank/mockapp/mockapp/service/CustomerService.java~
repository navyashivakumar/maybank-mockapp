package com.maybank.mockapp.mockapp.service;

import com.maybank.mockapp.mockapp.dto.CustomerDTO;
import com.maybank.mockapp.mockapp.entity.Customer;
import com.maybank.mockapp.mockapp.exception.CustomerNotFoundException;
import com.maybank.mockapp.mockapp.exception.GlobalExceptionHandler;
import com.maybank.mockapp.mockapp.repository.AccountRepository;
import com.maybank.mockapp.mockapp.repository.CustomerRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CustomerService {

    private static final Logger logger = LoggerFactory.getLogger(CustomerService.class);

    @Autowired
    private CustomerRepository customerRepo;

    public CustomerDTO createCustomer(String name) {
        logger.info("Creating customer with name: {}", name);
        Customer customer = new Customer();
        customer.setName(name);
        customer = customerRepo.save(customer);
        logger.debug("Customer saved: {}", customer);
        return new CustomerDTO(customer.getId(), customer.getName());
    }

    public CustomerDTO inquireCustomer(Long id) throws CustomerNotFoundException {
        logger.info("Fetching customer with ID: {}", id);
        return customerRepo.findById(id)
                .map(customer -> {
                    logger.debug("Customer found: {}", customer);
                    return new CustomerDTO(customer.getId(), customer.getName());
                })
                .orElseThrow(() -> {
                    logger.error("Customer not found with ID: {}", id);
                    return new CustomerNotFoundException("Customer not found with ID: " + id);
                });
    }
}
